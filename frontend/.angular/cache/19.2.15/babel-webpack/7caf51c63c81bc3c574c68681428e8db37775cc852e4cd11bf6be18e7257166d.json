{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DirectorService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5260/api/director';\n  }\n  getDirectors() {\n    return this.http.get(this.apiUrl);\n  }\n  getDirector(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createDirector(director) {\n    return this.http.post(this.apiUrl, director);\n  }\n  updateDirector(id, director) {\n    return this.http.put(`${this.apiUrl}/${id}`, director);\n  }\n  deleteDirector(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function DirectorService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DirectorService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DirectorService,\n      factory: DirectorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["DirectorService","constructor","http","apiUrl","getDirectors","get","getDirector","id","createDirector","director","post","updateDirector","put","deleteDirector","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lenovo\\Documents\\pruebajabil\\frontend\\src\\app\\services\\director.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Director, CreateDirector, UpdateDirector } from '../models/director.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DirectorService {\n  private apiUrl = 'http://localhost:5260/api/director';\n\n  constructor(private http: HttpClient) { }\n\n  getDirectors(): Observable<Director[]> {\n    return this.http.get<Director[]>(this.apiUrl);\n  }\n\n  getDirector(id: number): Observable<Director> {\n    return this.http.get<Director>(`${this.apiUrl}/${id}`);\n  }\n\n  createDirector(director: CreateDirector): Observable<Director> {\n    return this.http.post<Director>(this.apiUrl, director);\n  }\n\n  updateDirector(id: number, director: UpdateDirector): Observable<Director> {\n    return this.http.put<Director>(`${this.apiUrl}/${id}`, director);\n  }\n\n  deleteDirector(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n} "],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAEAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAcA,CAACC,QAAwB;IACrC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACP,MAAM,EAAEM,QAAQ,CAAC;EACxD;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAAwB;IACjD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uCAvBWP,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAflB,eAAe;MAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}