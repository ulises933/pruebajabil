{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5260/api/movie';\n  }\n  getMovies() {\n    return this.http.get(this.apiUrl);\n  }\n  getMovie(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  getMoviesByDirector(directorId) {\n    return this.http.get(`${this.apiUrl}/director/${directorId}`);\n  }\n  createMovie(movie) {\n    const movieData = {\n      ...movie,\n      duration: movie.duration ? this.convertDurationToTimeSpan(movie.duration) : undefined\n    };\n    return this.http.post(this.apiUrl, movieData);\n  }\n  updateMovie(id, movie) {\n    const movieData = {\n      ...movie,\n      duration: movie.duration ? this.convertDurationToTimeSpan(movie.duration) : undefined\n    };\n    return this.http.put(`${this.apiUrl}/${id}`, movieData);\n  }\n  deleteMovie(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  convertDurationToTimeSpan(duration) {\n    if (!duration) return undefined;\n    if (duration.match(/^\\d{2}:\\d{2}:\\d{2}$/)) {\n      return duration;\n    }\n    if (duration.match(/^\\d{2}:\\d{2}$/)) {\n      return duration + ':00';\n    }\n    return duration;\n  }\n  static {\n    this.ɵfac = function MovieService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MovieService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MovieService,\n      factory: MovieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["MovieService","constructor","http","apiUrl","getMovies","get","getMovie","id","getMoviesByDirector","directorId","createMovie","movie","movieData","duration","convertDurationToTimeSpan","undefined","post","updateMovie","put","deleteMovie","delete","match","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Lenovo\\Documents\\pruebajabil\\frontend\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Movie, CreateMovie, UpdateMovie } from '../models/movie.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private apiUrl = 'http://localhost:5260/api/movie';\n\n  constructor(private http: HttpClient) { }\n\n  getMovies(): Observable<Movie[]> {\n    return this.http.get<Movie[]>(this.apiUrl);\n  }\n\n  getMovie(id: number): Observable<Movie> {\n    return this.http.get<Movie>(`${this.apiUrl}/${id}`);\n  }\n\n  getMoviesByDirector(directorId: number): Observable<Movie[]> {\n    return this.http.get<Movie[]>(`${this.apiUrl}/director/${directorId}`);\n  }\n\n  createMovie(movie: CreateMovie): Observable<Movie> {\n    const movieData = {\n      ...movie,\n      duration: movie.duration ? this.convertDurationToTimeSpan(movie.duration) : undefined\n    };\n    return this.http.post<Movie>(this.apiUrl, movieData);\n  }\n\n  updateMovie(id: number, movie: UpdateMovie): Observable<Movie> {\n    const movieData = {\n      ...movie,\n      duration: movie.duration ? this.convertDurationToTimeSpan(movie.duration) : undefined\n    };\n    return this.http.put<Movie>(`${this.apiUrl}/${id}`, movieData);\n  }\n\n  deleteMovie(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  private convertDurationToTimeSpan(duration: string): string | undefined {\n    if (!duration) return undefined;\n    if (duration.match(/^\\d{2}:\\d{2}:\\d{2}$/)) {\n      return duration;\n    }\n    if (duration.match(/^\\d{2}:\\d{2}$/)) {\n      return duration + ':00';\n    }\n    return duration;\n  }\n} "],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEV;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrD;EAEAC,mBAAmBA,CAACC,UAAkB;IACpC,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,aAAaM,UAAU,EAAE,CAAC;EACxE;EAEAC,WAAWA,CAACC,KAAkB;IAC5B,MAAMC,SAAS,GAAG;MAChB,GAAGD,KAAK;MACRE,QAAQ,EAAEF,KAAK,CAACE,QAAQ,GAAG,IAAI,CAACC,yBAAyB,CAACH,KAAK,CAACE,QAAQ,CAAC,GAAGE;KAC7E;IACD,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAQ,IAAI,CAACb,MAAM,EAAES,SAAS,CAAC;EACtD;EAEAK,WAAWA,CAACV,EAAU,EAAEI,KAAkB;IACxC,MAAMC,SAAS,GAAG;MAChB,GAAGD,KAAK;MACRE,QAAQ,EAAEF,KAAK,CAACE,QAAQ,GAAG,IAAI,CAACC,yBAAyB,CAACH,KAAK,CAACE,QAAQ,CAAC,GAAGE;KAC7E;IACD,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAQ,GAAG,IAAI,CAACf,MAAM,IAAII,EAAE,EAAE,EAAEK,SAAS,CAAC;EAChE;EAEAO,WAAWA,CAACZ,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACkB,MAAM,CAAO,GAAG,IAAI,CAACjB,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEQO,yBAAyBA,CAACD,QAAgB;IAChD,IAAI,CAACA,QAAQ,EAAE,OAAOE,SAAS;IAC/B,IAAIF,QAAQ,CAACQ,KAAK,CAAC,qBAAqB,CAAC,EAAE;MACzC,OAAOR,QAAQ;IACjB;IACA,IAAIA,QAAQ,CAACQ,KAAK,CAAC,eAAe,CAAC,EAAE;MACnC,OAAOR,QAAQ,GAAG,KAAK;IACzB;IACA,OAAOA,QAAQ;EACjB;;;uCA9CWb,YAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZzB,YAAY;MAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}